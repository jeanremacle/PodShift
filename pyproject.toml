[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "podshift"
version = "1.0.0"
description = "Seamless Docker to Podman Migration for Apple Silicon"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "PodShift Team"}
]
maintainers = [
    {name = "PodShift Team"}
]
keywords = ["podshift", "docker", "podman", "migration", "containers", "m1", "mac", "apple-silicon"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities"
]
requires-python = ">=3.8"
dependencies = [
    "docker>=6.1.0,<8.0.0",
    "PyYAML>=6.0,<7.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "black>=23.0.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0"
]
test = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0"
]
lint = [
    "black>=23.0.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0"
]

[project.scripts]
docker-inventory = "scripts.discovery.docker_inventory:main"
dependency-mapper = "scripts.discovery.dependency_mapper:main"

[project.urls]
Homepage = "https://github.com/podshift/podshift"
Repository = "https://github.com/podshift/podshift.git"
Documentation = "https://github.com/podshift/podshift/wiki"
"Bug Tracker" = "https://github.com/podshift/podshift/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["scripts*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml", "*.json"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "docker.*",
    "yaml.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=scripts",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["scripts"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
show_missing = true
precision = 2

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
per-file-ignores = [
    "__init__.py:F401"
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info"
]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true